MERN STACK ESTATE.

1. Install React.js and Tailwind CSS and Create the first Template

a Create a folder named mern-estate and dragged and drop on opened vs code

ie. mern-estate$:

b Run the following command: npm create vite@latest client

==> mern-estate$ reate vite@latest client
follow the instruction:

a. Select y to proceed
b. select react
c. select javascript + swc

DONE. NOW RUN

cd client
npm install
npm run dev

mern-estate$ cd client

mern-estate/cient $ npm install
After the installation, go to the google search bar and search for Tailwind vite

mern-estate/cient $


2.Install Tailwind CSS with Vite under REACT:

Install tailwindcss and its peer dependencies, 
then generate your tailwind.config.js and postcss.config.js files.

mern-estate/cient $ npm install -D tailwindcss postcss autoprefixer

mern-estate/cient $ npx tailwindcss init -p



3.Configure your template paths
Add the paths to all of your template files in your tailwind.config.js file.

tailwind.config.js:

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}

3a. copythe code and go to vs code and open the file 'tailwind.config.js ' , delete existing code and paste the above code

tailwind.config.js:


/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}



4. Add the Tailwind directives to your CSS
Add the @tailwind directives for each of Tailwind’s layers to your ./src/index.css file.
index.css
@tailwind base;
@tailwind components;
@tailwind utilities;

4b. copy the above 3 line of codes and paste it on the ./src/index.css file in your vs code
index.css
@tailwind base;
@tailwind components;
@tailwind utilities;




5. Start your build process
Run your build process with npm run dev

Before you run the npm run dev,ensure you clear your applications;
1. delete App.css because we are using Tailwind css
2. delete file inside the public /vite.ng
3. delete file inside the asset/vite,png

4. Open App.jsx and clean all the code snippets and use rfc that will suggets react f component
and enter key to automatically include the code below:
App.jsx

import React from 'react'

export default function App() {
  return (
    <div>
      <h1 className='text-red-500'>App</h1>
    </div>
  )
}

6. mern-estate/cient $ npm run dev

VITE v4.4.11  ready in 34575 ms

  ➜  Local:   http://localhost:5173/
  ➜  Network: use --host to expose
  ➜  press h to show help

copy and paste to any browser http://localhost:5173/ and it will display App with color red
that show you have install reat and tailwind css.


FOR THE BACKEND
1. Create api directoy, 
1a. Go inside the root directory 'mern-estates'


2. Create dependencies inside the root directory 
   mern-estates $ npm init -y
2a. package.json file will be created
    package.json:

    {
  "name": "mern-estate",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}

NOTE: Main file inside the dependencies is index.js.
Create this index.js file inside the api directory.


3. Install express with the following command:
mern-estates $ npm i express

After installation, you can use express framework to create
server api

index.js

import express from "express";

const app = express();

app.listen(3000, () => {
    console.log('server is running on port 3000');
    } 
);

After creating the express server file index.js, then
run the command to start the server,
$ node api/index.js

3a. when you run the above command for starting the server,
error will occur. To sort out the error, include the scripts
into the dependencies . "type": "module";

package.json:
    
    {
  "name": "mern-estate",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}

Once the above script is added, and run again, the server 
will start indicating server is running on port 3000.

4. But there was still a problem because any time you make changes
to the index.js file, you will have to restart the server which is time
wasting . We will have to add scripts that will restart the server 
automatically

"scripts": {
  "dev": "nodemone api/index.js",
  "start": "node api/index.js"
},

Now our package.json file will be modified as 
package.json:
    
    {
  "name": "mern-estate",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "dev": "nodemon api/index.js",
    "start": "node api/index.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}

6. Now run the command: 
$ npm i nodemon

7. start your server with this command:
$ npm run dev